---
title: "Model"
format: html
execute:
  echo: FALSE
---

```{r}
#| label: setup
#| message: FALSE
#| warning: FALSE

library(tidyverse)
library(gtsummary)
library(brms)
library(primer.data)


# Code to make the brm() model. using write_rds and read_rds to prevent error messages.
x <- nes |> 
  filter(year == 2020) |> 
  select(pres_vote, region) |> 
  mutate(pres_vote = case_when(
    pres_vote == "Democrat" ~ "Biden",
    pres_vote == "Republican" ~ "Trump",
    pres_vote == "Third Party" ~ "Jorgensen"
  )) |>
  drop_na()

# fit_elec_2020 <- brm(formula = pres_vote ~ region,
#                 data = x,
#                 family = categorical(),
#                 silent = 2,
#                 refresh = 0,
#                 seed = 9)
# 
# write_rds(fit_elec_2020, "fit_elec_2020.rds")

fit_elec_2020 <- read_rds("fit_elec_2020.rds")
```

Because I had three possible outcomes, and because there is no natural ordering among the outcomes, I ended up using a categorical model. 

$$ vote_i  \sim Categorical(\rho_{trump}, \rho_{biden}, \rho_{jorgensen}) $$

Here is the mathematical equation I used. 

$$
\begin{aligned}
\rho_{biden}  &=& 1 - \rho_{trump} - \rho_{jorgensen}\\ 
\rho_{trump} &=& \frac{e^{-0.22 - 0.38 northeast + 0.15 south - 0.39 west}}{1 + e^{-0.22 - 0.38 northeast + 0.15 south - 0.39 west}}\\
\rho_{jorgensen} &=& \frac{e^{-3.4 - 0.49 northeast -0.24 south - 0.36 west}}{1 + e^{-3.4 - 0.49 northeast -0.24 south - 0.36 west}}\\
\end{aligned}
$$
Now we can look at our regression table, which shows our expected values.

```{r}
#| label: table
#| warning: FALSE

tbl_regression(fit_elec_2020)
```

If we want to calculate the posterior probability, we substitute these values into the equation above.
